/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package abuda.indexer.token_transfer;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Value extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8727403050544780552L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Value\",\"namespace\":\"abuda.indexer.token_transfer\",\"fields\":[{\"name\":\"receipt_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"included_in_block_hash\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"included_in_chunk_hash\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"index_in_chunk\",\"type\":\"int\"},{\"name\":\"included_in_block_timestamp\",\"type\":{\"type\":\"bytes\",\"connect.name\":\"org.apache.kafka.connect.data.Decimal\",\"connect.parameters\":{\"connect.decimal.precision\":\"20\",\"scale\":\"0\"},\"connect.version\":1,\"logicalType\":\"decimal\",\"precision\":20,\"scale\":0}},{\"name\":\"predecessor_account_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"receiver_account_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"originated_from_transaction_hash\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"gas_burnt\",\"type\":{\"type\":\"bytes\",\"connect.name\":\"org.apache.kafka.connect.data.Decimal\",\"connect.parameters\":{\"connect.decimal.precision\":\"20\",\"scale\":\"0\"},\"connect.version\":1,\"logicalType\":\"decimal\",\"precision\":20,\"scale\":0}},{\"name\":\"tokens_burnt\",\"type\":{\"type\":\"bytes\",\"connect.name\":\"org.apache.kafka.connect.data.Decimal\",\"connect.parameters\":{\"connect.decimal.precision\":\"45\",\"scale\":\"0\"},\"connect.version\":1,\"logicalType\":\"decimal\",\"precision\":45,\"scale\":0}},{\"name\":\"executor_account_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"status\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"connect.name\":\"io.debezium.data.Enum\",\"connect.parameters\":{\"allowed\":\"UNKNOWN,FAILURE,SUCCESS_VALUE,SUCCESS_RECEIPT_ID\"},\"connect.version\":1}},{\"name\":\"shard_id\",\"type\":{\"type\":\"bytes\",\"connect.name\":\"org.apache.kafka.connect.data.Decimal\",\"connect.parameters\":{\"connect.decimal.precision\":\"20\",\"scale\":\"0\"},\"connect.version\":1,\"logicalType\":\"decimal\",\"precision\":20,\"scale\":0}},{\"name\":\"index_in_action_receipt\",\"type\":\"int\"},{\"name\":\"action_kind\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"connect.name\":\"io.debezium.data.Enum\",\"connect.parameters\":{\"allowed\":\"CREATE_ACCOUNT,DEPLOY_CONTRACT,FUNCTION_CALL,TRANSFER,STAKE,ADD_KEY,DELETE_KEY,DELETE_ACCOUNT\"},\"connect.version\":1}},{\"name\":\"args\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"connect.name\":\"io.debezium.data.Json\",\"connect.version\":1}},{\"name\":\"affected_account\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"affected_amount\",\"type\":{\"type\":\"bytes\",\"connect.name\":\"org.apache.kafka.connect.data.Decimal\",\"connect.parameters\":{\"connect.decimal.precision\":\"45\",\"scale\":\"0\"},\"connect.version\":1,\"logicalType\":\"decimal\",\"precision\":45,\"scale\":0}},{\"name\":\"affected_reason\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"transfer_from\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"transfer_to\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<Value> ENCODER =
      new BinaryMessageEncoder<Value>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Value> DECODER =
      new BinaryMessageDecoder<Value>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Value> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Value> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Value> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Value>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Value to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Value from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Value instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Value fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String receipt_id;
   private java.lang.String included_in_block_hash;
   private java.lang.String included_in_chunk_hash;
   private int index_in_chunk;
   private java.math.BigDecimal included_in_block_timestamp;
   private java.lang.String predecessor_account_id;
   private java.lang.String receiver_account_id;
   private java.lang.String originated_from_transaction_hash;
   private java.math.BigDecimal gas_burnt;
   private java.math.BigDecimal tokens_burnt;
   private java.lang.String executor_account_id;
   private java.lang.String status;
   private java.math.BigDecimal shard_id;
   private int index_in_action_receipt;
   private java.lang.String action_kind;
   private java.lang.String args;
   private java.lang.String affected_account;
   private java.math.BigDecimal affected_amount;
   private java.lang.String affected_reason;
   private java.lang.String transfer_from;
   private java.lang.String transfer_to;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Value() {}

  /**
   * All-args constructor.
   * @param receipt_id The new value for receipt_id
   * @param included_in_block_hash The new value for included_in_block_hash
   * @param included_in_chunk_hash The new value for included_in_chunk_hash
   * @param index_in_chunk The new value for index_in_chunk
   * @param included_in_block_timestamp The new value for included_in_block_timestamp
   * @param predecessor_account_id The new value for predecessor_account_id
   * @param receiver_account_id The new value for receiver_account_id
   * @param originated_from_transaction_hash The new value for originated_from_transaction_hash
   * @param gas_burnt The new value for gas_burnt
   * @param tokens_burnt The new value for tokens_burnt
   * @param executor_account_id The new value for executor_account_id
   * @param status The new value for status
   * @param shard_id The new value for shard_id
   * @param index_in_action_receipt The new value for index_in_action_receipt
   * @param action_kind The new value for action_kind
   * @param args The new value for args
   * @param affected_account The new value for affected_account
   * @param affected_amount The new value for affected_amount
   * @param affected_reason The new value for affected_reason
   * @param transfer_from The new value for transfer_from
   * @param transfer_to The new value for transfer_to
   */
  public Value(java.lang.String receipt_id, java.lang.String included_in_block_hash, java.lang.String included_in_chunk_hash, java.lang.Integer index_in_chunk, java.math.BigDecimal included_in_block_timestamp, java.lang.String predecessor_account_id, java.lang.String receiver_account_id, java.lang.String originated_from_transaction_hash, java.math.BigDecimal gas_burnt, java.math.BigDecimal tokens_burnt, java.lang.String executor_account_id, java.lang.String status, java.math.BigDecimal shard_id, java.lang.Integer index_in_action_receipt, java.lang.String action_kind, java.lang.String args, java.lang.String affected_account, java.math.BigDecimal affected_amount, java.lang.String affected_reason, java.lang.String transfer_from, java.lang.String transfer_to) {
    this.receipt_id = receipt_id;
    this.included_in_block_hash = included_in_block_hash;
    this.included_in_chunk_hash = included_in_chunk_hash;
    this.index_in_chunk = index_in_chunk;
    this.included_in_block_timestamp = included_in_block_timestamp;
    this.predecessor_account_id = predecessor_account_id;
    this.receiver_account_id = receiver_account_id;
    this.originated_from_transaction_hash = originated_from_transaction_hash;
    this.gas_burnt = gas_burnt;
    this.tokens_burnt = tokens_burnt;
    this.executor_account_id = executor_account_id;
    this.status = status;
    this.shard_id = shard_id;
    this.index_in_action_receipt = index_in_action_receipt;
    this.action_kind = action_kind;
    this.args = args;
    this.affected_account = affected_account;
    this.affected_amount = affected_amount;
    this.affected_reason = affected_reason;
    this.transfer_from = transfer_from;
    this.transfer_to = transfer_to;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return receipt_id;
    case 1: return included_in_block_hash;
    case 2: return included_in_chunk_hash;
    case 3: return index_in_chunk;
    case 4: return included_in_block_timestamp;
    case 5: return predecessor_account_id;
    case 6: return receiver_account_id;
    case 7: return originated_from_transaction_hash;
    case 8: return gas_burnt;
    case 9: return tokens_burnt;
    case 10: return executor_account_id;
    case 11: return status;
    case 12: return shard_id;
    case 13: return index_in_action_receipt;
    case 14: return action_kind;
    case 15: return args;
    case 16: return affected_account;
    case 17: return affected_amount;
    case 18: return affected_reason;
    case 19: return transfer_from;
    case 20: return transfer_to;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      new org.apache.avro.Conversions.DecimalConversion(),
      null,
      null,
      null,
      new org.apache.avro.Conversions.DecimalConversion(),
      new org.apache.avro.Conversions.DecimalConversion(),
      null,
      null,
      new org.apache.avro.Conversions.DecimalConversion(),
      null,
      null,
      null,
      null,
      new org.apache.avro.Conversions.DecimalConversion(),
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: receipt_id = value$ != null ? value$.toString() : null; break;
    case 1: included_in_block_hash = value$ != null ? value$.toString() : null; break;
    case 2: included_in_chunk_hash = value$ != null ? value$.toString() : null; break;
    case 3: index_in_chunk = (java.lang.Integer)value$; break;
    case 4: included_in_block_timestamp = (java.math.BigDecimal)value$; break;
    case 5: predecessor_account_id = value$ != null ? value$.toString() : null; break;
    case 6: receiver_account_id = value$ != null ? value$.toString() : null; break;
    case 7: originated_from_transaction_hash = value$ != null ? value$.toString() : null; break;
    case 8: gas_burnt = (java.math.BigDecimal)value$; break;
    case 9: tokens_burnt = (java.math.BigDecimal)value$; break;
    case 10: executor_account_id = value$ != null ? value$.toString() : null; break;
    case 11: status = value$ != null ? value$.toString() : null; break;
    case 12: shard_id = (java.math.BigDecimal)value$; break;
    case 13: index_in_action_receipt = (java.lang.Integer)value$; break;
    case 14: action_kind = value$ != null ? value$.toString() : null; break;
    case 15: args = value$ != null ? value$.toString() : null; break;
    case 16: affected_account = value$ != null ? value$.toString() : null; break;
    case 17: affected_amount = (java.math.BigDecimal)value$; break;
    case 18: affected_reason = value$ != null ? value$.toString() : null; break;
    case 19: transfer_from = value$ != null ? value$.toString() : null; break;
    case 20: transfer_to = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'receipt_id' field.
   * @return The value of the 'receipt_id' field.
   */
  public java.lang.String getReceiptId() {
    return receipt_id;
  }


  /**
   * Sets the value of the 'receipt_id' field.
   * @param value the value to set.
   */
  public void setReceiptId(java.lang.String value) {
    this.receipt_id = value;
  }

  /**
   * Gets the value of the 'included_in_block_hash' field.
   * @return The value of the 'included_in_block_hash' field.
   */
  public java.lang.String getIncludedInBlockHash() {
    return included_in_block_hash;
  }


  /**
   * Sets the value of the 'included_in_block_hash' field.
   * @param value the value to set.
   */
  public void setIncludedInBlockHash(java.lang.String value) {
    this.included_in_block_hash = value;
  }

  /**
   * Gets the value of the 'included_in_chunk_hash' field.
   * @return The value of the 'included_in_chunk_hash' field.
   */
  public java.lang.String getIncludedInChunkHash() {
    return included_in_chunk_hash;
  }


  /**
   * Sets the value of the 'included_in_chunk_hash' field.
   * @param value the value to set.
   */
  public void setIncludedInChunkHash(java.lang.String value) {
    this.included_in_chunk_hash = value;
  }

  /**
   * Gets the value of the 'index_in_chunk' field.
   * @return The value of the 'index_in_chunk' field.
   */
  public int getIndexInChunk() {
    return index_in_chunk;
  }


  /**
   * Sets the value of the 'index_in_chunk' field.
   * @param value the value to set.
   */
  public void setIndexInChunk(int value) {
    this.index_in_chunk = value;
  }

  /**
   * Gets the value of the 'included_in_block_timestamp' field.
   * @return The value of the 'included_in_block_timestamp' field.
   */
  public java.math.BigDecimal getIncludedInBlockTimestamp() {
    return included_in_block_timestamp;
  }


  /**
   * Sets the value of the 'included_in_block_timestamp' field.
   * @param value the value to set.
   */
  public void setIncludedInBlockTimestamp(java.math.BigDecimal value) {
    this.included_in_block_timestamp = value;
  }

  /**
   * Gets the value of the 'predecessor_account_id' field.
   * @return The value of the 'predecessor_account_id' field.
   */
  public java.lang.String getPredecessorAccountId() {
    return predecessor_account_id;
  }


  /**
   * Sets the value of the 'predecessor_account_id' field.
   * @param value the value to set.
   */
  public void setPredecessorAccountId(java.lang.String value) {
    this.predecessor_account_id = value;
  }

  /**
   * Gets the value of the 'receiver_account_id' field.
   * @return The value of the 'receiver_account_id' field.
   */
  public java.lang.String getReceiverAccountId() {
    return receiver_account_id;
  }


  /**
   * Sets the value of the 'receiver_account_id' field.
   * @param value the value to set.
   */
  public void setReceiverAccountId(java.lang.String value) {
    this.receiver_account_id = value;
  }

  /**
   * Gets the value of the 'originated_from_transaction_hash' field.
   * @return The value of the 'originated_from_transaction_hash' field.
   */
  public java.lang.String getOriginatedFromTransactionHash() {
    return originated_from_transaction_hash;
  }


  /**
   * Sets the value of the 'originated_from_transaction_hash' field.
   * @param value the value to set.
   */
  public void setOriginatedFromTransactionHash(java.lang.String value) {
    this.originated_from_transaction_hash = value;
  }

  /**
   * Gets the value of the 'gas_burnt' field.
   * @return The value of the 'gas_burnt' field.
   */
  public java.math.BigDecimal getGasBurnt() {
    return gas_burnt;
  }


  /**
   * Sets the value of the 'gas_burnt' field.
   * @param value the value to set.
   */
  public void setGasBurnt(java.math.BigDecimal value) {
    this.gas_burnt = value;
  }

  /**
   * Gets the value of the 'tokens_burnt' field.
   * @return The value of the 'tokens_burnt' field.
   */
  public java.math.BigDecimal getTokensBurnt() {
    return tokens_burnt;
  }


  /**
   * Sets the value of the 'tokens_burnt' field.
   * @param value the value to set.
   */
  public void setTokensBurnt(java.math.BigDecimal value) {
    this.tokens_burnt = value;
  }

  /**
   * Gets the value of the 'executor_account_id' field.
   * @return The value of the 'executor_account_id' field.
   */
  public java.lang.String getExecutorAccountId() {
    return executor_account_id;
  }


  /**
   * Sets the value of the 'executor_account_id' field.
   * @param value the value to set.
   */
  public void setExecutorAccountId(java.lang.String value) {
    this.executor_account_id = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'shard_id' field.
   * @return The value of the 'shard_id' field.
   */
  public java.math.BigDecimal getShardId() {
    return shard_id;
  }


  /**
   * Sets the value of the 'shard_id' field.
   * @param value the value to set.
   */
  public void setShardId(java.math.BigDecimal value) {
    this.shard_id = value;
  }

  /**
   * Gets the value of the 'index_in_action_receipt' field.
   * @return The value of the 'index_in_action_receipt' field.
   */
  public int getIndexInActionReceipt() {
    return index_in_action_receipt;
  }


  /**
   * Sets the value of the 'index_in_action_receipt' field.
   * @param value the value to set.
   */
  public void setIndexInActionReceipt(int value) {
    this.index_in_action_receipt = value;
  }

  /**
   * Gets the value of the 'action_kind' field.
   * @return The value of the 'action_kind' field.
   */
  public java.lang.String getActionKind() {
    return action_kind;
  }


  /**
   * Sets the value of the 'action_kind' field.
   * @param value the value to set.
   */
  public void setActionKind(java.lang.String value) {
    this.action_kind = value;
  }

  /**
   * Gets the value of the 'args' field.
   * @return The value of the 'args' field.
   */
  public java.lang.String getArgs() {
    return args;
  }


  /**
   * Sets the value of the 'args' field.
   * @param value the value to set.
   */
  public void setArgs(java.lang.String value) {
    this.args = value;
  }

  /**
   * Gets the value of the 'affected_account' field.
   * @return The value of the 'affected_account' field.
   */
  public java.lang.String getAffectedAccount() {
    return affected_account;
  }


  /**
   * Sets the value of the 'affected_account' field.
   * @param value the value to set.
   */
  public void setAffectedAccount(java.lang.String value) {
    this.affected_account = value;
  }

  /**
   * Gets the value of the 'affected_amount' field.
   * @return The value of the 'affected_amount' field.
   */
  public java.math.BigDecimal getAffectedAmount() {
    return affected_amount;
  }


  /**
   * Sets the value of the 'affected_amount' field.
   * @param value the value to set.
   */
  public void setAffectedAmount(java.math.BigDecimal value) {
    this.affected_amount = value;
  }

  /**
   * Gets the value of the 'affected_reason' field.
   * @return The value of the 'affected_reason' field.
   */
  public java.lang.String getAffectedReason() {
    return affected_reason;
  }


  /**
   * Sets the value of the 'affected_reason' field.
   * @param value the value to set.
   */
  public void setAffectedReason(java.lang.String value) {
    this.affected_reason = value;
  }

  /**
   * Gets the value of the 'transfer_from' field.
   * @return The value of the 'transfer_from' field.
   */
  public java.lang.String getTransferFrom() {
    return transfer_from;
  }


  /**
   * Sets the value of the 'transfer_from' field.
   * @param value the value to set.
   */
  public void setTransferFrom(java.lang.String value) {
    this.transfer_from = value;
  }

  /**
   * Gets the value of the 'transfer_to' field.
   * @return The value of the 'transfer_to' field.
   */
  public java.lang.String getTransferTo() {
    return transfer_to;
  }


  /**
   * Sets the value of the 'transfer_to' field.
   * @param value the value to set.
   */
  public void setTransferTo(java.lang.String value) {
    this.transfer_to = value;
  }

  /**
   * Creates a new Value RecordBuilder.
   * @return A new Value RecordBuilder
   */
  public static abuda.indexer.token_transfer.Value.Builder newBuilder() {
    return new abuda.indexer.token_transfer.Value.Builder();
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Value RecordBuilder
   */
  public static abuda.indexer.token_transfer.Value.Builder newBuilder(abuda.indexer.token_transfer.Value.Builder other) {
    if (other == null) {
      return new abuda.indexer.token_transfer.Value.Builder();
    } else {
      return new abuda.indexer.token_transfer.Value.Builder(other);
    }
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Value instance.
   * @param other The existing instance to copy.
   * @return A new Value RecordBuilder
   */
  public static abuda.indexer.token_transfer.Value.Builder newBuilder(abuda.indexer.token_transfer.Value other) {
    if (other == null) {
      return new abuda.indexer.token_transfer.Value.Builder();
    } else {
      return new abuda.indexer.token_transfer.Value.Builder(other);
    }
  }

  /**
   * RecordBuilder for Value instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Value>
    implements org.apache.avro.data.RecordBuilder<Value> {

    private java.lang.String receipt_id;
    private java.lang.String included_in_block_hash;
    private java.lang.String included_in_chunk_hash;
    private int index_in_chunk;
    private java.math.BigDecimal included_in_block_timestamp;
    private java.lang.String predecessor_account_id;
    private java.lang.String receiver_account_id;
    private java.lang.String originated_from_transaction_hash;
    private java.math.BigDecimal gas_burnt;
    private java.math.BigDecimal tokens_burnt;
    private java.lang.String executor_account_id;
    private java.lang.String status;
    private java.math.BigDecimal shard_id;
    private int index_in_action_receipt;
    private java.lang.String action_kind;
    private java.lang.String args;
    private java.lang.String affected_account;
    private java.math.BigDecimal affected_amount;
    private java.lang.String affected_reason;
    private java.lang.String transfer_from;
    private java.lang.String transfer_to;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(abuda.indexer.token_transfer.Value.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.receipt_id)) {
        this.receipt_id = data().deepCopy(fields()[0].schema(), other.receipt_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.included_in_block_hash)) {
        this.included_in_block_hash = data().deepCopy(fields()[1].schema(), other.included_in_block_hash);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.included_in_chunk_hash)) {
        this.included_in_chunk_hash = data().deepCopy(fields()[2].schema(), other.included_in_chunk_hash);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.index_in_chunk)) {
        this.index_in_chunk = data().deepCopy(fields()[3].schema(), other.index_in_chunk);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.included_in_block_timestamp)) {
        this.included_in_block_timestamp = data().deepCopy(fields()[4].schema(), other.included_in_block_timestamp);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.predecessor_account_id)) {
        this.predecessor_account_id = data().deepCopy(fields()[5].schema(), other.predecessor_account_id);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.receiver_account_id)) {
        this.receiver_account_id = data().deepCopy(fields()[6].schema(), other.receiver_account_id);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.originated_from_transaction_hash)) {
        this.originated_from_transaction_hash = data().deepCopy(fields()[7].schema(), other.originated_from_transaction_hash);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.gas_burnt)) {
        this.gas_burnt = data().deepCopy(fields()[8].schema(), other.gas_burnt);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.tokens_burnt)) {
        this.tokens_burnt = data().deepCopy(fields()[9].schema(), other.tokens_burnt);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.executor_account_id)) {
        this.executor_account_id = data().deepCopy(fields()[10].schema(), other.executor_account_id);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.status)) {
        this.status = data().deepCopy(fields()[11].schema(), other.status);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.shard_id)) {
        this.shard_id = data().deepCopy(fields()[12].schema(), other.shard_id);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.index_in_action_receipt)) {
        this.index_in_action_receipt = data().deepCopy(fields()[13].schema(), other.index_in_action_receipt);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.action_kind)) {
        this.action_kind = data().deepCopy(fields()[14].schema(), other.action_kind);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.args)) {
        this.args = data().deepCopy(fields()[15].schema(), other.args);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.affected_account)) {
        this.affected_account = data().deepCopy(fields()[16].schema(), other.affected_account);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.affected_amount)) {
        this.affected_amount = data().deepCopy(fields()[17].schema(), other.affected_amount);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.affected_reason)) {
        this.affected_reason = data().deepCopy(fields()[18].schema(), other.affected_reason);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.transfer_from)) {
        this.transfer_from = data().deepCopy(fields()[19].schema(), other.transfer_from);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.transfer_to)) {
        this.transfer_to = data().deepCopy(fields()[20].schema(), other.transfer_to);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
    }

    /**
     * Creates a Builder by copying an existing Value instance
     * @param other The existing instance to copy.
     */
    private Builder(abuda.indexer.token_transfer.Value other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.receipt_id)) {
        this.receipt_id = data().deepCopy(fields()[0].schema(), other.receipt_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.included_in_block_hash)) {
        this.included_in_block_hash = data().deepCopy(fields()[1].schema(), other.included_in_block_hash);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.included_in_chunk_hash)) {
        this.included_in_chunk_hash = data().deepCopy(fields()[2].schema(), other.included_in_chunk_hash);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.index_in_chunk)) {
        this.index_in_chunk = data().deepCopy(fields()[3].schema(), other.index_in_chunk);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.included_in_block_timestamp)) {
        this.included_in_block_timestamp = data().deepCopy(fields()[4].schema(), other.included_in_block_timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.predecessor_account_id)) {
        this.predecessor_account_id = data().deepCopy(fields()[5].schema(), other.predecessor_account_id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.receiver_account_id)) {
        this.receiver_account_id = data().deepCopy(fields()[6].schema(), other.receiver_account_id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.originated_from_transaction_hash)) {
        this.originated_from_transaction_hash = data().deepCopy(fields()[7].schema(), other.originated_from_transaction_hash);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.gas_burnt)) {
        this.gas_burnt = data().deepCopy(fields()[8].schema(), other.gas_burnt);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.tokens_burnt)) {
        this.tokens_burnt = data().deepCopy(fields()[9].schema(), other.tokens_burnt);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.executor_account_id)) {
        this.executor_account_id = data().deepCopy(fields()[10].schema(), other.executor_account_id);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.status)) {
        this.status = data().deepCopy(fields()[11].schema(), other.status);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.shard_id)) {
        this.shard_id = data().deepCopy(fields()[12].schema(), other.shard_id);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.index_in_action_receipt)) {
        this.index_in_action_receipt = data().deepCopy(fields()[13].schema(), other.index_in_action_receipt);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.action_kind)) {
        this.action_kind = data().deepCopy(fields()[14].schema(), other.action_kind);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.args)) {
        this.args = data().deepCopy(fields()[15].schema(), other.args);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.affected_account)) {
        this.affected_account = data().deepCopy(fields()[16].schema(), other.affected_account);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.affected_amount)) {
        this.affected_amount = data().deepCopy(fields()[17].schema(), other.affected_amount);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.affected_reason)) {
        this.affected_reason = data().deepCopy(fields()[18].schema(), other.affected_reason);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.transfer_from)) {
        this.transfer_from = data().deepCopy(fields()[19].schema(), other.transfer_from);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.transfer_to)) {
        this.transfer_to = data().deepCopy(fields()[20].schema(), other.transfer_to);
        fieldSetFlags()[20] = true;
      }
    }

    /**
      * Gets the value of the 'receipt_id' field.
      * @return The value.
      */
    public java.lang.String getReceiptId() {
      return receipt_id;
    }


    /**
      * Sets the value of the 'receipt_id' field.
      * @param value The value of 'receipt_id'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setReceiptId(java.lang.String value) {
      validate(fields()[0], value);
      this.receipt_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'receipt_id' field has been set.
      * @return True if the 'receipt_id' field has been set, false otherwise.
      */
    public boolean hasReceiptId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'receipt_id' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearReceiptId() {
      receipt_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'included_in_block_hash' field.
      * @return The value.
      */
    public java.lang.String getIncludedInBlockHash() {
      return included_in_block_hash;
    }


    /**
      * Sets the value of the 'included_in_block_hash' field.
      * @param value The value of 'included_in_block_hash'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setIncludedInBlockHash(java.lang.String value) {
      validate(fields()[1], value);
      this.included_in_block_hash = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'included_in_block_hash' field has been set.
      * @return True if the 'included_in_block_hash' field has been set, false otherwise.
      */
    public boolean hasIncludedInBlockHash() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'included_in_block_hash' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearIncludedInBlockHash() {
      included_in_block_hash = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'included_in_chunk_hash' field.
      * @return The value.
      */
    public java.lang.String getIncludedInChunkHash() {
      return included_in_chunk_hash;
    }


    /**
      * Sets the value of the 'included_in_chunk_hash' field.
      * @param value The value of 'included_in_chunk_hash'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setIncludedInChunkHash(java.lang.String value) {
      validate(fields()[2], value);
      this.included_in_chunk_hash = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'included_in_chunk_hash' field has been set.
      * @return True if the 'included_in_chunk_hash' field has been set, false otherwise.
      */
    public boolean hasIncludedInChunkHash() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'included_in_chunk_hash' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearIncludedInChunkHash() {
      included_in_chunk_hash = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'index_in_chunk' field.
      * @return The value.
      */
    public int getIndexInChunk() {
      return index_in_chunk;
    }


    /**
      * Sets the value of the 'index_in_chunk' field.
      * @param value The value of 'index_in_chunk'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setIndexInChunk(int value) {
      validate(fields()[3], value);
      this.index_in_chunk = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'index_in_chunk' field has been set.
      * @return True if the 'index_in_chunk' field has been set, false otherwise.
      */
    public boolean hasIndexInChunk() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'index_in_chunk' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearIndexInChunk() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'included_in_block_timestamp' field.
      * @return The value.
      */
    public java.math.BigDecimal getIncludedInBlockTimestamp() {
      return included_in_block_timestamp;
    }


    /**
      * Sets the value of the 'included_in_block_timestamp' field.
      * @param value The value of 'included_in_block_timestamp'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setIncludedInBlockTimestamp(java.math.BigDecimal value) {
      validate(fields()[4], value);
      this.included_in_block_timestamp = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'included_in_block_timestamp' field has been set.
      * @return True if the 'included_in_block_timestamp' field has been set, false otherwise.
      */
    public boolean hasIncludedInBlockTimestamp() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'included_in_block_timestamp' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearIncludedInBlockTimestamp() {
      included_in_block_timestamp = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'predecessor_account_id' field.
      * @return The value.
      */
    public java.lang.String getPredecessorAccountId() {
      return predecessor_account_id;
    }


    /**
      * Sets the value of the 'predecessor_account_id' field.
      * @param value The value of 'predecessor_account_id'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setPredecessorAccountId(java.lang.String value) {
      validate(fields()[5], value);
      this.predecessor_account_id = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'predecessor_account_id' field has been set.
      * @return True if the 'predecessor_account_id' field has been set, false otherwise.
      */
    public boolean hasPredecessorAccountId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'predecessor_account_id' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearPredecessorAccountId() {
      predecessor_account_id = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'receiver_account_id' field.
      * @return The value.
      */
    public java.lang.String getReceiverAccountId() {
      return receiver_account_id;
    }


    /**
      * Sets the value of the 'receiver_account_id' field.
      * @param value The value of 'receiver_account_id'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setReceiverAccountId(java.lang.String value) {
      validate(fields()[6], value);
      this.receiver_account_id = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'receiver_account_id' field has been set.
      * @return True if the 'receiver_account_id' field has been set, false otherwise.
      */
    public boolean hasReceiverAccountId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'receiver_account_id' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearReceiverAccountId() {
      receiver_account_id = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'originated_from_transaction_hash' field.
      * @return The value.
      */
    public java.lang.String getOriginatedFromTransactionHash() {
      return originated_from_transaction_hash;
    }


    /**
      * Sets the value of the 'originated_from_transaction_hash' field.
      * @param value The value of 'originated_from_transaction_hash'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setOriginatedFromTransactionHash(java.lang.String value) {
      validate(fields()[7], value);
      this.originated_from_transaction_hash = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'originated_from_transaction_hash' field has been set.
      * @return True if the 'originated_from_transaction_hash' field has been set, false otherwise.
      */
    public boolean hasOriginatedFromTransactionHash() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'originated_from_transaction_hash' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearOriginatedFromTransactionHash() {
      originated_from_transaction_hash = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'gas_burnt' field.
      * @return The value.
      */
    public java.math.BigDecimal getGasBurnt() {
      return gas_burnt;
    }


    /**
      * Sets the value of the 'gas_burnt' field.
      * @param value The value of 'gas_burnt'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setGasBurnt(java.math.BigDecimal value) {
      validate(fields()[8], value);
      this.gas_burnt = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'gas_burnt' field has been set.
      * @return True if the 'gas_burnt' field has been set, false otherwise.
      */
    public boolean hasGasBurnt() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'gas_burnt' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearGasBurnt() {
      gas_burnt = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'tokens_burnt' field.
      * @return The value.
      */
    public java.math.BigDecimal getTokensBurnt() {
      return tokens_burnt;
    }


    /**
      * Sets the value of the 'tokens_burnt' field.
      * @param value The value of 'tokens_burnt'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setTokensBurnt(java.math.BigDecimal value) {
      validate(fields()[9], value);
      this.tokens_burnt = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'tokens_burnt' field has been set.
      * @return True if the 'tokens_burnt' field has been set, false otherwise.
      */
    public boolean hasTokensBurnt() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'tokens_burnt' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearTokensBurnt() {
      tokens_burnt = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'executor_account_id' field.
      * @return The value.
      */
    public java.lang.String getExecutorAccountId() {
      return executor_account_id;
    }


    /**
      * Sets the value of the 'executor_account_id' field.
      * @param value The value of 'executor_account_id'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setExecutorAccountId(java.lang.String value) {
      validate(fields()[10], value);
      this.executor_account_id = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'executor_account_id' field has been set.
      * @return True if the 'executor_account_id' field has been set, false otherwise.
      */
    public boolean hasExecutorAccountId() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'executor_account_id' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearExecutorAccountId() {
      executor_account_id = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setStatus(java.lang.String value) {
      validate(fields()[11], value);
      this.status = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearStatus() {
      status = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'shard_id' field.
      * @return The value.
      */
    public java.math.BigDecimal getShardId() {
      return shard_id;
    }


    /**
      * Sets the value of the 'shard_id' field.
      * @param value The value of 'shard_id'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setShardId(java.math.BigDecimal value) {
      validate(fields()[12], value);
      this.shard_id = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'shard_id' field has been set.
      * @return True if the 'shard_id' field has been set, false otherwise.
      */
    public boolean hasShardId() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'shard_id' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearShardId() {
      shard_id = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'index_in_action_receipt' field.
      * @return The value.
      */
    public int getIndexInActionReceipt() {
      return index_in_action_receipt;
    }


    /**
      * Sets the value of the 'index_in_action_receipt' field.
      * @param value The value of 'index_in_action_receipt'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setIndexInActionReceipt(int value) {
      validate(fields()[13], value);
      this.index_in_action_receipt = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'index_in_action_receipt' field has been set.
      * @return True if the 'index_in_action_receipt' field has been set, false otherwise.
      */
    public boolean hasIndexInActionReceipt() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'index_in_action_receipt' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearIndexInActionReceipt() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'action_kind' field.
      * @return The value.
      */
    public java.lang.String getActionKind() {
      return action_kind;
    }


    /**
      * Sets the value of the 'action_kind' field.
      * @param value The value of 'action_kind'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setActionKind(java.lang.String value) {
      validate(fields()[14], value);
      this.action_kind = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'action_kind' field has been set.
      * @return True if the 'action_kind' field has been set, false otherwise.
      */
    public boolean hasActionKind() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'action_kind' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearActionKind() {
      action_kind = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'args' field.
      * @return The value.
      */
    public java.lang.String getArgs() {
      return args;
    }


    /**
      * Sets the value of the 'args' field.
      * @param value The value of 'args'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setArgs(java.lang.String value) {
      validate(fields()[15], value);
      this.args = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'args' field has been set.
      * @return True if the 'args' field has been set, false otherwise.
      */
    public boolean hasArgs() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'args' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearArgs() {
      args = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'affected_account' field.
      * @return The value.
      */
    public java.lang.String getAffectedAccount() {
      return affected_account;
    }


    /**
      * Sets the value of the 'affected_account' field.
      * @param value The value of 'affected_account'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setAffectedAccount(java.lang.String value) {
      validate(fields()[16], value);
      this.affected_account = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'affected_account' field has been set.
      * @return True if the 'affected_account' field has been set, false otherwise.
      */
    public boolean hasAffectedAccount() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'affected_account' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearAffectedAccount() {
      affected_account = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'affected_amount' field.
      * @return The value.
      */
    public java.math.BigDecimal getAffectedAmount() {
      return affected_amount;
    }


    /**
      * Sets the value of the 'affected_amount' field.
      * @param value The value of 'affected_amount'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setAffectedAmount(java.math.BigDecimal value) {
      validate(fields()[17], value);
      this.affected_amount = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'affected_amount' field has been set.
      * @return True if the 'affected_amount' field has been set, false otherwise.
      */
    public boolean hasAffectedAmount() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'affected_amount' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearAffectedAmount() {
      affected_amount = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'affected_reason' field.
      * @return The value.
      */
    public java.lang.String getAffectedReason() {
      return affected_reason;
    }


    /**
      * Sets the value of the 'affected_reason' field.
      * @param value The value of 'affected_reason'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setAffectedReason(java.lang.String value) {
      validate(fields()[18], value);
      this.affected_reason = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'affected_reason' field has been set.
      * @return True if the 'affected_reason' field has been set, false otherwise.
      */
    public boolean hasAffectedReason() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'affected_reason' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearAffectedReason() {
      affected_reason = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'transfer_from' field.
      * @return The value.
      */
    public java.lang.String getTransferFrom() {
      return transfer_from;
    }


    /**
      * Sets the value of the 'transfer_from' field.
      * @param value The value of 'transfer_from'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setTransferFrom(java.lang.String value) {
      validate(fields()[19], value);
      this.transfer_from = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'transfer_from' field has been set.
      * @return True if the 'transfer_from' field has been set, false otherwise.
      */
    public boolean hasTransferFrom() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'transfer_from' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearTransferFrom() {
      transfer_from = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'transfer_to' field.
      * @return The value.
      */
    public java.lang.String getTransferTo() {
      return transfer_to;
    }


    /**
      * Sets the value of the 'transfer_to' field.
      * @param value The value of 'transfer_to'.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder setTransferTo(java.lang.String value) {
      validate(fields()[20], value);
      this.transfer_to = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'transfer_to' field has been set.
      * @return True if the 'transfer_to' field has been set, false otherwise.
      */
    public boolean hasTransferTo() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'transfer_to' field.
      * @return This builder.
      */
    public abuda.indexer.token_transfer.Value.Builder clearTransferTo() {
      transfer_to = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Value build() {
      try {
        Value record = new Value();
        record.receipt_id = fieldSetFlags()[0] ? this.receipt_id : (java.lang.String) defaultValue(fields()[0]);
        record.included_in_block_hash = fieldSetFlags()[1] ? this.included_in_block_hash : (java.lang.String) defaultValue(fields()[1]);
        record.included_in_chunk_hash = fieldSetFlags()[2] ? this.included_in_chunk_hash : (java.lang.String) defaultValue(fields()[2]);
        record.index_in_chunk = fieldSetFlags()[3] ? this.index_in_chunk : (java.lang.Integer) defaultValue(fields()[3]);
        record.included_in_block_timestamp = fieldSetFlags()[4] ? this.included_in_block_timestamp : (java.math.BigDecimal) defaultValue(fields()[4]);
        record.predecessor_account_id = fieldSetFlags()[5] ? this.predecessor_account_id : (java.lang.String) defaultValue(fields()[5]);
        record.receiver_account_id = fieldSetFlags()[6] ? this.receiver_account_id : (java.lang.String) defaultValue(fields()[6]);
        record.originated_from_transaction_hash = fieldSetFlags()[7] ? this.originated_from_transaction_hash : (java.lang.String) defaultValue(fields()[7]);
        record.gas_burnt = fieldSetFlags()[8] ? this.gas_burnt : (java.math.BigDecimal) defaultValue(fields()[8]);
        record.tokens_burnt = fieldSetFlags()[9] ? this.tokens_burnt : (java.math.BigDecimal) defaultValue(fields()[9]);
        record.executor_account_id = fieldSetFlags()[10] ? this.executor_account_id : (java.lang.String) defaultValue(fields()[10]);
        record.status = fieldSetFlags()[11] ? this.status : (java.lang.String) defaultValue(fields()[11]);
        record.shard_id = fieldSetFlags()[12] ? this.shard_id : (java.math.BigDecimal) defaultValue(fields()[12]);
        record.index_in_action_receipt = fieldSetFlags()[13] ? this.index_in_action_receipt : (java.lang.Integer) defaultValue(fields()[13]);
        record.action_kind = fieldSetFlags()[14] ? this.action_kind : (java.lang.String) defaultValue(fields()[14]);
        record.args = fieldSetFlags()[15] ? this.args : (java.lang.String) defaultValue(fields()[15]);
        record.affected_account = fieldSetFlags()[16] ? this.affected_account : (java.lang.String) defaultValue(fields()[16]);
        record.affected_amount = fieldSetFlags()[17] ? this.affected_amount : (java.math.BigDecimal) defaultValue(fields()[17]);
        record.affected_reason = fieldSetFlags()[18] ? this.affected_reason : (java.lang.String) defaultValue(fields()[18]);
        record.transfer_from = fieldSetFlags()[19] ? this.transfer_from : (java.lang.String) defaultValue(fields()[19]);
        record.transfer_to = fieldSetFlags()[20] ? this.transfer_to : (java.lang.String) defaultValue(fields()[20]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Value>
    WRITER$ = (org.apache.avro.io.DatumWriter<Value>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Value>
    READER$ = (org.apache.avro.io.DatumReader<Value>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










