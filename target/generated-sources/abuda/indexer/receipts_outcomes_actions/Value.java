/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package abuda.indexer.receipts_outcomes_actions;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Value extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5651627486109064407L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Value\",\"namespace\":\"abuda.indexer.receipts_outcomes_actions\",\"fields\":[{\"name\":\"receipt\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Value\",\"namespace\":\"abuda.indexer.receipts\",\"fields\":[{\"name\":\"receipt_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"included_in_block_hash\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"included_in_chunk_hash\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"index_in_chunk\",\"type\":\"int\"},{\"name\":\"included_in_block_timestamp\",\"type\":{\"type\":\"bytes\",\"scale\":0,\"precision\":20,\"connect.version\":1,\"connect.parameters\":{\"scale\":\"0\",\"connect.decimal.precision\":\"20\"},\"connect.name\":\"org.apache.kafka.connect.data.Decimal\",\"logicalType\":\"decimal\"}},{\"name\":\"predecessor_account_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"receiver_account_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"receipt_kind\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"connect.version\":1,\"connect.parameters\":{\"allowed\":\"ACTION,DATA\"},\"connect.name\":\"io.debezium.data.Enum\"}},{\"name\":\"originated_from_transaction_hash\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"__deleted\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"abuda.indexer.receipts.Value\"}]},{\"name\":\"outcome\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Value\",\"namespace\":\"abuda.indexer.execution_outcomes\",\"fields\":[{\"name\":\"receipt_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"executed_in_block_hash\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"executed_in_block_timestamp\",\"type\":{\"type\":\"bytes\",\"scale\":0,\"precision\":20,\"connect.version\":1,\"connect.parameters\":{\"scale\":\"0\",\"connect.decimal.precision\":\"20\"},\"connect.name\":\"org.apache.kafka.connect.data.Decimal\",\"logicalType\":\"decimal\"}},{\"name\":\"index_in_chunk\",\"type\":\"int\"},{\"name\":\"gas_burnt\",\"type\":{\"type\":\"bytes\",\"scale\":0,\"precision\":20,\"connect.version\":1,\"connect.parameters\":{\"scale\":\"0\",\"connect.decimal.precision\":\"20\"},\"connect.name\":\"org.apache.kafka.connect.data.Decimal\",\"logicalType\":\"decimal\"}},{\"name\":\"tokens_burnt\",\"type\":{\"type\":\"bytes\",\"scale\":0,\"precision\":45,\"connect.version\":1,\"connect.parameters\":{\"scale\":\"0\",\"connect.decimal.precision\":\"45\"},\"connect.name\":\"org.apache.kafka.connect.data.Decimal\",\"logicalType\":\"decimal\"}},{\"name\":\"executor_account_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"status\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"connect.version\":1,\"connect.parameters\":{\"allowed\":\"UNKNOWN,FAILURE,SUCCESS_VALUE,SUCCESS_RECEIPT_ID\"},\"connect.name\":\"io.debezium.data.Enum\"}},{\"name\":\"shard_id\",\"type\":{\"type\":\"bytes\",\"scale\":0,\"precision\":20,\"connect.version\":1,\"connect.parameters\":{\"scale\":\"0\",\"connect.decimal.precision\":\"20\"},\"connect.name\":\"org.apache.kafka.connect.data.Decimal\",\"logicalType\":\"decimal\"}},{\"name\":\"__deleted\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"abuda.indexer.execution_outcomes.Value\"}]},{\"name\":\"action\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Value\",\"namespace\":\"abuda.indexer.action_receipt_actions\",\"fields\":[{\"name\":\"receipt_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"index_in_action_receipt\",\"type\":\"int\"},{\"name\":\"action_kind\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"connect.version\":1,\"connect.parameters\":{\"allowed\":\"CREATE_ACCOUNT,DEPLOY_CONTRACT,FUNCTION_CALL,TRANSFER,STAKE,ADD_KEY,DELETE_KEY,DELETE_ACCOUNT\"},\"connect.name\":\"io.debezium.data.Enum\"}},{\"name\":\"args\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"connect.version\":1,\"connect.name\":\"io.debezium.data.Json\"}},{\"name\":\"receipt_predecessor_account_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"receipt_receiver_account_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"receipt_included_in_block_timestamp\",\"type\":{\"type\":\"bytes\",\"scale\":0,\"precision\":20,\"connect.version\":1,\"connect.parameters\":{\"scale\":\"0\",\"connect.decimal.precision\":\"20\"},\"connect.name\":\"org.apache.kafka.connect.data.Decimal\",\"logicalType\":\"decimal\"}},{\"name\":\"__deleted\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"abuda.indexer.action_receipt_actions.Value\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<Value> ENCODER =
      new BinaryMessageEncoder<Value>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Value> DECODER =
      new BinaryMessageDecoder<Value>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Value> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Value> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Value> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Value>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Value to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Value from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Value instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Value fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private abuda.indexer.receipts.Value receipt;
   private abuda.indexer.execution_outcomes.Value outcome;
   private abuda.indexer.action_receipt_actions.Value action;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Value() {}

  /**
   * All-args constructor.
   * @param receipt The new value for receipt
   * @param outcome The new value for outcome
   * @param action The new value for action
   */
  public Value(abuda.indexer.receipts.Value receipt, abuda.indexer.execution_outcomes.Value outcome, abuda.indexer.action_receipt_actions.Value action) {
    this.receipt = receipt;
    this.outcome = outcome;
    this.action = action;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return receipt;
    case 1: return outcome;
    case 2: return action;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: receipt = (abuda.indexer.receipts.Value)value$; break;
    case 1: outcome = (abuda.indexer.execution_outcomes.Value)value$; break;
    case 2: action = (abuda.indexer.action_receipt_actions.Value)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'receipt' field.
   * @return The value of the 'receipt' field.
   */
  public abuda.indexer.receipts.Value getReceipt() {
    return receipt;
  }


  /**
   * Sets the value of the 'receipt' field.
   * @param value the value to set.
   */
  public void setReceipt(abuda.indexer.receipts.Value value) {
    this.receipt = value;
  }

  /**
   * Gets the value of the 'outcome' field.
   * @return The value of the 'outcome' field.
   */
  public abuda.indexer.execution_outcomes.Value getOutcome() {
    return outcome;
  }


  /**
   * Sets the value of the 'outcome' field.
   * @param value the value to set.
   */
  public void setOutcome(abuda.indexer.execution_outcomes.Value value) {
    this.outcome = value;
  }

  /**
   * Gets the value of the 'action' field.
   * @return The value of the 'action' field.
   */
  public abuda.indexer.action_receipt_actions.Value getAction() {
    return action;
  }


  /**
   * Sets the value of the 'action' field.
   * @param value the value to set.
   */
  public void setAction(abuda.indexer.action_receipt_actions.Value value) {
    this.action = value;
  }

  /**
   * Creates a new Value RecordBuilder.
   * @return A new Value RecordBuilder
   */
  public static abuda.indexer.receipts_outcomes_actions.Value.Builder newBuilder() {
    return new abuda.indexer.receipts_outcomes_actions.Value.Builder();
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Value RecordBuilder
   */
  public static abuda.indexer.receipts_outcomes_actions.Value.Builder newBuilder(abuda.indexer.receipts_outcomes_actions.Value.Builder other) {
    if (other == null) {
      return new abuda.indexer.receipts_outcomes_actions.Value.Builder();
    } else {
      return new abuda.indexer.receipts_outcomes_actions.Value.Builder(other);
    }
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Value instance.
   * @param other The existing instance to copy.
   * @return A new Value RecordBuilder
   */
  public static abuda.indexer.receipts_outcomes_actions.Value.Builder newBuilder(abuda.indexer.receipts_outcomes_actions.Value other) {
    if (other == null) {
      return new abuda.indexer.receipts_outcomes_actions.Value.Builder();
    } else {
      return new abuda.indexer.receipts_outcomes_actions.Value.Builder(other);
    }
  }

  /**
   * RecordBuilder for Value instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Value>
    implements org.apache.avro.data.RecordBuilder<Value> {

    private abuda.indexer.receipts.Value receipt;
    private abuda.indexer.receipts.Value.Builder receiptBuilder;
    private abuda.indexer.execution_outcomes.Value outcome;
    private abuda.indexer.execution_outcomes.Value.Builder outcomeBuilder;
    private abuda.indexer.action_receipt_actions.Value action;
    private abuda.indexer.action_receipt_actions.Value.Builder actionBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(abuda.indexer.receipts_outcomes_actions.Value.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.receipt)) {
        this.receipt = data().deepCopy(fields()[0].schema(), other.receipt);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasReceiptBuilder()) {
        this.receiptBuilder = abuda.indexer.receipts.Value.newBuilder(other.getReceiptBuilder());
      }
      if (isValidValue(fields()[1], other.outcome)) {
        this.outcome = data().deepCopy(fields()[1].schema(), other.outcome);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasOutcomeBuilder()) {
        this.outcomeBuilder = abuda.indexer.execution_outcomes.Value.newBuilder(other.getOutcomeBuilder());
      }
      if (isValidValue(fields()[2], other.action)) {
        this.action = data().deepCopy(fields()[2].schema(), other.action);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasActionBuilder()) {
        this.actionBuilder = abuda.indexer.action_receipt_actions.Value.newBuilder(other.getActionBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Value instance
     * @param other The existing instance to copy.
     */
    private Builder(abuda.indexer.receipts_outcomes_actions.Value other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.receipt)) {
        this.receipt = data().deepCopy(fields()[0].schema(), other.receipt);
        fieldSetFlags()[0] = true;
      }
      this.receiptBuilder = null;
      if (isValidValue(fields()[1], other.outcome)) {
        this.outcome = data().deepCopy(fields()[1].schema(), other.outcome);
        fieldSetFlags()[1] = true;
      }
      this.outcomeBuilder = null;
      if (isValidValue(fields()[2], other.action)) {
        this.action = data().deepCopy(fields()[2].schema(), other.action);
        fieldSetFlags()[2] = true;
      }
      this.actionBuilder = null;
    }

    /**
      * Gets the value of the 'receipt' field.
      * @return The value.
      */
    public abuda.indexer.receipts.Value getReceipt() {
      return receipt;
    }


    /**
      * Sets the value of the 'receipt' field.
      * @param value The value of 'receipt'.
      * @return This builder.
      */
    public abuda.indexer.receipts_outcomes_actions.Value.Builder setReceipt(abuda.indexer.receipts.Value value) {
      validate(fields()[0], value);
      this.receiptBuilder = null;
      this.receipt = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'receipt' field has been set.
      * @return True if the 'receipt' field has been set, false otherwise.
      */
    public boolean hasReceipt() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'receipt' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public abuda.indexer.receipts.Value.Builder getReceiptBuilder() {
      if (receiptBuilder == null) {
        if (hasReceipt()) {
          setReceiptBuilder(abuda.indexer.receipts.Value.newBuilder(receipt));
        } else {
          setReceiptBuilder(abuda.indexer.receipts.Value.newBuilder());
        }
      }
      return receiptBuilder;
    }

    /**
     * Sets the Builder instance for the 'receipt' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public abuda.indexer.receipts_outcomes_actions.Value.Builder setReceiptBuilder(abuda.indexer.receipts.Value.Builder value) {
      clearReceipt();
      receiptBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'receipt' field has an active Builder instance
     * @return True if the 'receipt' field has an active Builder instance
     */
    public boolean hasReceiptBuilder() {
      return receiptBuilder != null;
    }

    /**
      * Clears the value of the 'receipt' field.
      * @return This builder.
      */
    public abuda.indexer.receipts_outcomes_actions.Value.Builder clearReceipt() {
      receipt = null;
      receiptBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'outcome' field.
      * @return The value.
      */
    public abuda.indexer.execution_outcomes.Value getOutcome() {
      return outcome;
    }


    /**
      * Sets the value of the 'outcome' field.
      * @param value The value of 'outcome'.
      * @return This builder.
      */
    public abuda.indexer.receipts_outcomes_actions.Value.Builder setOutcome(abuda.indexer.execution_outcomes.Value value) {
      validate(fields()[1], value);
      this.outcomeBuilder = null;
      this.outcome = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'outcome' field has been set.
      * @return True if the 'outcome' field has been set, false otherwise.
      */
    public boolean hasOutcome() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'outcome' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public abuda.indexer.execution_outcomes.Value.Builder getOutcomeBuilder() {
      if (outcomeBuilder == null) {
        if (hasOutcome()) {
          setOutcomeBuilder(abuda.indexer.execution_outcomes.Value.newBuilder(outcome));
        } else {
          setOutcomeBuilder(abuda.indexer.execution_outcomes.Value.newBuilder());
        }
      }
      return outcomeBuilder;
    }

    /**
     * Sets the Builder instance for the 'outcome' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public abuda.indexer.receipts_outcomes_actions.Value.Builder setOutcomeBuilder(abuda.indexer.execution_outcomes.Value.Builder value) {
      clearOutcome();
      outcomeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'outcome' field has an active Builder instance
     * @return True if the 'outcome' field has an active Builder instance
     */
    public boolean hasOutcomeBuilder() {
      return outcomeBuilder != null;
    }

    /**
      * Clears the value of the 'outcome' field.
      * @return This builder.
      */
    public abuda.indexer.receipts_outcomes_actions.Value.Builder clearOutcome() {
      outcome = null;
      outcomeBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'action' field.
      * @return The value.
      */
    public abuda.indexer.action_receipt_actions.Value getAction() {
      return action;
    }


    /**
      * Sets the value of the 'action' field.
      * @param value The value of 'action'.
      * @return This builder.
      */
    public abuda.indexer.receipts_outcomes_actions.Value.Builder setAction(abuda.indexer.action_receipt_actions.Value value) {
      validate(fields()[2], value);
      this.actionBuilder = null;
      this.action = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'action' field has been set.
      * @return True if the 'action' field has been set, false otherwise.
      */
    public boolean hasAction() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'action' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public abuda.indexer.action_receipt_actions.Value.Builder getActionBuilder() {
      if (actionBuilder == null) {
        if (hasAction()) {
          setActionBuilder(abuda.indexer.action_receipt_actions.Value.newBuilder(action));
        } else {
          setActionBuilder(abuda.indexer.action_receipt_actions.Value.newBuilder());
        }
      }
      return actionBuilder;
    }

    /**
     * Sets the Builder instance for the 'action' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public abuda.indexer.receipts_outcomes_actions.Value.Builder setActionBuilder(abuda.indexer.action_receipt_actions.Value.Builder value) {
      clearAction();
      actionBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'action' field has an active Builder instance
     * @return True if the 'action' field has an active Builder instance
     */
    public boolean hasActionBuilder() {
      return actionBuilder != null;
    }

    /**
      * Clears the value of the 'action' field.
      * @return This builder.
      */
    public abuda.indexer.receipts_outcomes_actions.Value.Builder clearAction() {
      action = null;
      actionBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Value build() {
      try {
        Value record = new Value();
        if (receiptBuilder != null) {
          try {
            record.receipt = this.receiptBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("receipt"));
            throw e;
          }
        } else {
          record.receipt = fieldSetFlags()[0] ? this.receipt : (abuda.indexer.receipts.Value) defaultValue(fields()[0]);
        }
        if (outcomeBuilder != null) {
          try {
            record.outcome = this.outcomeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("outcome"));
            throw e;
          }
        } else {
          record.outcome = fieldSetFlags()[1] ? this.outcome : (abuda.indexer.execution_outcomes.Value) defaultValue(fields()[1]);
        }
        if (actionBuilder != null) {
          try {
            record.action = this.actionBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("action"));
            throw e;
          }
        } else {
          record.action = fieldSetFlags()[2] ? this.action : (abuda.indexer.action_receipt_actions.Value) defaultValue(fields()[2]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Value>
    WRITER$ = (org.apache.avro.io.DatumWriter<Value>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Value>
    READER$ = (org.apache.avro.io.DatumReader<Value>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










