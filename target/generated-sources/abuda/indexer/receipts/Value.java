/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package abuda.indexer.receipts;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Value extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2202084183353686065L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Value\",\"namespace\":\"abuda.indexer.receipts\",\"fields\":[{\"name\":\"receipt_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"included_in_block_hash\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"included_in_chunk_hash\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"index_in_chunk\",\"type\":\"int\"},{\"name\":\"included_in_block_timestamp\",\"type\":{\"type\":\"bytes\",\"scale\":0,\"precision\":20,\"connect.version\":1,\"connect.parameters\":{\"scale\":\"0\",\"connect.decimal.precision\":\"20\"},\"connect.name\":\"org.apache.kafka.connect.data.Decimal\",\"logicalType\":\"decimal\"}},{\"name\":\"predecessor_account_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"receiver_account_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"receipt_kind\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"connect.version\":1,\"connect.parameters\":{\"allowed\":\"ACTION,DATA\"},\"connect.name\":\"io.debezium.data.Enum\"}},{\"name\":\"originated_from_transaction_hash\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"__deleted\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"abuda.indexer.receipts.Value\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<Value> ENCODER =
      new BinaryMessageEncoder<Value>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Value> DECODER =
      new BinaryMessageDecoder<Value>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Value> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Value> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Value> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Value>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Value to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Value from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Value instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Value fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String receipt_id;
   private java.lang.String included_in_block_hash;
   private java.lang.String included_in_chunk_hash;
   private int index_in_chunk;
   private java.math.BigDecimal included_in_block_timestamp;
   private java.lang.String predecessor_account_id;
   private java.lang.String receiver_account_id;
   private java.lang.String receipt_kind;
   private java.lang.String originated_from_transaction_hash;
   private java.lang.String __deleted;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Value() {}

  /**
   * All-args constructor.
   * @param receipt_id The new value for receipt_id
   * @param included_in_block_hash The new value for included_in_block_hash
   * @param included_in_chunk_hash The new value for included_in_chunk_hash
   * @param index_in_chunk The new value for index_in_chunk
   * @param included_in_block_timestamp The new value for included_in_block_timestamp
   * @param predecessor_account_id The new value for predecessor_account_id
   * @param receiver_account_id The new value for receiver_account_id
   * @param receipt_kind The new value for receipt_kind
   * @param originated_from_transaction_hash The new value for originated_from_transaction_hash
   * @param __deleted The new value for __deleted
   */
  public Value(java.lang.String receipt_id, java.lang.String included_in_block_hash, java.lang.String included_in_chunk_hash, java.lang.Integer index_in_chunk, java.math.BigDecimal included_in_block_timestamp, java.lang.String predecessor_account_id, java.lang.String receiver_account_id, java.lang.String receipt_kind, java.lang.String originated_from_transaction_hash, java.lang.String __deleted) {
    this.receipt_id = receipt_id;
    this.included_in_block_hash = included_in_block_hash;
    this.included_in_chunk_hash = included_in_chunk_hash;
    this.index_in_chunk = index_in_chunk;
    this.included_in_block_timestamp = included_in_block_timestamp;
    this.predecessor_account_id = predecessor_account_id;
    this.receiver_account_id = receiver_account_id;
    this.receipt_kind = receipt_kind;
    this.originated_from_transaction_hash = originated_from_transaction_hash;
    this.__deleted = __deleted;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return receipt_id;
    case 1: return included_in_block_hash;
    case 2: return included_in_chunk_hash;
    case 3: return index_in_chunk;
    case 4: return included_in_block_timestamp;
    case 5: return predecessor_account_id;
    case 6: return receiver_account_id;
    case 7: return receipt_kind;
    case 8: return originated_from_transaction_hash;
    case 9: return __deleted;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      new org.apache.avro.Conversions.DecimalConversion(),
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: receipt_id = value$ != null ? value$.toString() : null; break;
    case 1: included_in_block_hash = value$ != null ? value$.toString() : null; break;
    case 2: included_in_chunk_hash = value$ != null ? value$.toString() : null; break;
    case 3: index_in_chunk = (java.lang.Integer)value$; break;
    case 4: included_in_block_timestamp = (java.math.BigDecimal)value$; break;
    case 5: predecessor_account_id = value$ != null ? value$.toString() : null; break;
    case 6: receiver_account_id = value$ != null ? value$.toString() : null; break;
    case 7: receipt_kind = value$ != null ? value$.toString() : null; break;
    case 8: originated_from_transaction_hash = value$ != null ? value$.toString() : null; break;
    case 9: __deleted = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'receipt_id' field.
   * @return The value of the 'receipt_id' field.
   */
  public java.lang.String getReceiptId() {
    return receipt_id;
  }


  /**
   * Sets the value of the 'receipt_id' field.
   * @param value the value to set.
   */
  public void setReceiptId(java.lang.String value) {
    this.receipt_id = value;
  }

  /**
   * Gets the value of the 'included_in_block_hash' field.
   * @return The value of the 'included_in_block_hash' field.
   */
  public java.lang.String getIncludedInBlockHash() {
    return included_in_block_hash;
  }


  /**
   * Sets the value of the 'included_in_block_hash' field.
   * @param value the value to set.
   */
  public void setIncludedInBlockHash(java.lang.String value) {
    this.included_in_block_hash = value;
  }

  /**
   * Gets the value of the 'included_in_chunk_hash' field.
   * @return The value of the 'included_in_chunk_hash' field.
   */
  public java.lang.String getIncludedInChunkHash() {
    return included_in_chunk_hash;
  }


  /**
   * Sets the value of the 'included_in_chunk_hash' field.
   * @param value the value to set.
   */
  public void setIncludedInChunkHash(java.lang.String value) {
    this.included_in_chunk_hash = value;
  }

  /**
   * Gets the value of the 'index_in_chunk' field.
   * @return The value of the 'index_in_chunk' field.
   */
  public int getIndexInChunk() {
    return index_in_chunk;
  }


  /**
   * Sets the value of the 'index_in_chunk' field.
   * @param value the value to set.
   */
  public void setIndexInChunk(int value) {
    this.index_in_chunk = value;
  }

  /**
   * Gets the value of the 'included_in_block_timestamp' field.
   * @return The value of the 'included_in_block_timestamp' field.
   */
  public java.math.BigDecimal getIncludedInBlockTimestamp() {
    return included_in_block_timestamp;
  }


  /**
   * Sets the value of the 'included_in_block_timestamp' field.
   * @param value the value to set.
   */
  public void setIncludedInBlockTimestamp(java.math.BigDecimal value) {
    this.included_in_block_timestamp = value;
  }

  /**
   * Gets the value of the 'predecessor_account_id' field.
   * @return The value of the 'predecessor_account_id' field.
   */
  public java.lang.String getPredecessorAccountId() {
    return predecessor_account_id;
  }


  /**
   * Sets the value of the 'predecessor_account_id' field.
   * @param value the value to set.
   */
  public void setPredecessorAccountId(java.lang.String value) {
    this.predecessor_account_id = value;
  }

  /**
   * Gets the value of the 'receiver_account_id' field.
   * @return The value of the 'receiver_account_id' field.
   */
  public java.lang.String getReceiverAccountId() {
    return receiver_account_id;
  }


  /**
   * Sets the value of the 'receiver_account_id' field.
   * @param value the value to set.
   */
  public void setReceiverAccountId(java.lang.String value) {
    this.receiver_account_id = value;
  }

  /**
   * Gets the value of the 'receipt_kind' field.
   * @return The value of the 'receipt_kind' field.
   */
  public java.lang.String getReceiptKind() {
    return receipt_kind;
  }


  /**
   * Sets the value of the 'receipt_kind' field.
   * @param value the value to set.
   */
  public void setReceiptKind(java.lang.String value) {
    this.receipt_kind = value;
  }

  /**
   * Gets the value of the 'originated_from_transaction_hash' field.
   * @return The value of the 'originated_from_transaction_hash' field.
   */
  public java.lang.String getOriginatedFromTransactionHash() {
    return originated_from_transaction_hash;
  }


  /**
   * Sets the value of the 'originated_from_transaction_hash' field.
   * @param value the value to set.
   */
  public void setOriginatedFromTransactionHash(java.lang.String value) {
    this.originated_from_transaction_hash = value;
  }

  /**
   * Gets the value of the '__deleted' field.
   * @return The value of the '__deleted' field.
   */
  public java.lang.String getDeleted$1() {
    return __deleted;
  }


  /**
   * Sets the value of the '__deleted' field.
   * @param value the value to set.
   */
  public void setDeleted$1(java.lang.String value) {
    this.__deleted = value;
  }

  /**
   * Creates a new Value RecordBuilder.
   * @return A new Value RecordBuilder
   */
  public static abuda.indexer.receipts.Value.Builder newBuilder() {
    return new abuda.indexer.receipts.Value.Builder();
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Value RecordBuilder
   */
  public static abuda.indexer.receipts.Value.Builder newBuilder(abuda.indexer.receipts.Value.Builder other) {
    if (other == null) {
      return new abuda.indexer.receipts.Value.Builder();
    } else {
      return new abuda.indexer.receipts.Value.Builder(other);
    }
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Value instance.
   * @param other The existing instance to copy.
   * @return A new Value RecordBuilder
   */
  public static abuda.indexer.receipts.Value.Builder newBuilder(abuda.indexer.receipts.Value other) {
    if (other == null) {
      return new abuda.indexer.receipts.Value.Builder();
    } else {
      return new abuda.indexer.receipts.Value.Builder(other);
    }
  }

  /**
   * RecordBuilder for Value instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Value>
    implements org.apache.avro.data.RecordBuilder<Value> {

    private java.lang.String receipt_id;
    private java.lang.String included_in_block_hash;
    private java.lang.String included_in_chunk_hash;
    private int index_in_chunk;
    private java.math.BigDecimal included_in_block_timestamp;
    private java.lang.String predecessor_account_id;
    private java.lang.String receiver_account_id;
    private java.lang.String receipt_kind;
    private java.lang.String originated_from_transaction_hash;
    private java.lang.String __deleted;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(abuda.indexer.receipts.Value.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.receipt_id)) {
        this.receipt_id = data().deepCopy(fields()[0].schema(), other.receipt_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.included_in_block_hash)) {
        this.included_in_block_hash = data().deepCopy(fields()[1].schema(), other.included_in_block_hash);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.included_in_chunk_hash)) {
        this.included_in_chunk_hash = data().deepCopy(fields()[2].schema(), other.included_in_chunk_hash);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.index_in_chunk)) {
        this.index_in_chunk = data().deepCopy(fields()[3].schema(), other.index_in_chunk);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.included_in_block_timestamp)) {
        this.included_in_block_timestamp = data().deepCopy(fields()[4].schema(), other.included_in_block_timestamp);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.predecessor_account_id)) {
        this.predecessor_account_id = data().deepCopy(fields()[5].schema(), other.predecessor_account_id);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.receiver_account_id)) {
        this.receiver_account_id = data().deepCopy(fields()[6].schema(), other.receiver_account_id);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.receipt_kind)) {
        this.receipt_kind = data().deepCopy(fields()[7].schema(), other.receipt_kind);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.originated_from_transaction_hash)) {
        this.originated_from_transaction_hash = data().deepCopy(fields()[8].schema(), other.originated_from_transaction_hash);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.__deleted)) {
        this.__deleted = data().deepCopy(fields()[9].schema(), other.__deleted);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing Value instance
     * @param other The existing instance to copy.
     */
    private Builder(abuda.indexer.receipts.Value other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.receipt_id)) {
        this.receipt_id = data().deepCopy(fields()[0].schema(), other.receipt_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.included_in_block_hash)) {
        this.included_in_block_hash = data().deepCopy(fields()[1].schema(), other.included_in_block_hash);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.included_in_chunk_hash)) {
        this.included_in_chunk_hash = data().deepCopy(fields()[2].schema(), other.included_in_chunk_hash);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.index_in_chunk)) {
        this.index_in_chunk = data().deepCopy(fields()[3].schema(), other.index_in_chunk);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.included_in_block_timestamp)) {
        this.included_in_block_timestamp = data().deepCopy(fields()[4].schema(), other.included_in_block_timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.predecessor_account_id)) {
        this.predecessor_account_id = data().deepCopy(fields()[5].schema(), other.predecessor_account_id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.receiver_account_id)) {
        this.receiver_account_id = data().deepCopy(fields()[6].schema(), other.receiver_account_id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.receipt_kind)) {
        this.receipt_kind = data().deepCopy(fields()[7].schema(), other.receipt_kind);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.originated_from_transaction_hash)) {
        this.originated_from_transaction_hash = data().deepCopy(fields()[8].schema(), other.originated_from_transaction_hash);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.__deleted)) {
        this.__deleted = data().deepCopy(fields()[9].schema(), other.__deleted);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'receipt_id' field.
      * @return The value.
      */
    public java.lang.String getReceiptId() {
      return receipt_id;
    }


    /**
      * Sets the value of the 'receipt_id' field.
      * @param value The value of 'receipt_id'.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder setReceiptId(java.lang.String value) {
      validate(fields()[0], value);
      this.receipt_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'receipt_id' field has been set.
      * @return True if the 'receipt_id' field has been set, false otherwise.
      */
    public boolean hasReceiptId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'receipt_id' field.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder clearReceiptId() {
      receipt_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'included_in_block_hash' field.
      * @return The value.
      */
    public java.lang.String getIncludedInBlockHash() {
      return included_in_block_hash;
    }


    /**
      * Sets the value of the 'included_in_block_hash' field.
      * @param value The value of 'included_in_block_hash'.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder setIncludedInBlockHash(java.lang.String value) {
      validate(fields()[1], value);
      this.included_in_block_hash = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'included_in_block_hash' field has been set.
      * @return True if the 'included_in_block_hash' field has been set, false otherwise.
      */
    public boolean hasIncludedInBlockHash() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'included_in_block_hash' field.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder clearIncludedInBlockHash() {
      included_in_block_hash = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'included_in_chunk_hash' field.
      * @return The value.
      */
    public java.lang.String getIncludedInChunkHash() {
      return included_in_chunk_hash;
    }


    /**
      * Sets the value of the 'included_in_chunk_hash' field.
      * @param value The value of 'included_in_chunk_hash'.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder setIncludedInChunkHash(java.lang.String value) {
      validate(fields()[2], value);
      this.included_in_chunk_hash = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'included_in_chunk_hash' field has been set.
      * @return True if the 'included_in_chunk_hash' field has been set, false otherwise.
      */
    public boolean hasIncludedInChunkHash() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'included_in_chunk_hash' field.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder clearIncludedInChunkHash() {
      included_in_chunk_hash = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'index_in_chunk' field.
      * @return The value.
      */
    public int getIndexInChunk() {
      return index_in_chunk;
    }


    /**
      * Sets the value of the 'index_in_chunk' field.
      * @param value The value of 'index_in_chunk'.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder setIndexInChunk(int value) {
      validate(fields()[3], value);
      this.index_in_chunk = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'index_in_chunk' field has been set.
      * @return True if the 'index_in_chunk' field has been set, false otherwise.
      */
    public boolean hasIndexInChunk() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'index_in_chunk' field.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder clearIndexInChunk() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'included_in_block_timestamp' field.
      * @return The value.
      */
    public java.math.BigDecimal getIncludedInBlockTimestamp() {
      return included_in_block_timestamp;
    }


    /**
      * Sets the value of the 'included_in_block_timestamp' field.
      * @param value The value of 'included_in_block_timestamp'.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder setIncludedInBlockTimestamp(java.math.BigDecimal value) {
      validate(fields()[4], value);
      this.included_in_block_timestamp = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'included_in_block_timestamp' field has been set.
      * @return True if the 'included_in_block_timestamp' field has been set, false otherwise.
      */
    public boolean hasIncludedInBlockTimestamp() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'included_in_block_timestamp' field.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder clearIncludedInBlockTimestamp() {
      included_in_block_timestamp = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'predecessor_account_id' field.
      * @return The value.
      */
    public java.lang.String getPredecessorAccountId() {
      return predecessor_account_id;
    }


    /**
      * Sets the value of the 'predecessor_account_id' field.
      * @param value The value of 'predecessor_account_id'.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder setPredecessorAccountId(java.lang.String value) {
      validate(fields()[5], value);
      this.predecessor_account_id = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'predecessor_account_id' field has been set.
      * @return True if the 'predecessor_account_id' field has been set, false otherwise.
      */
    public boolean hasPredecessorAccountId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'predecessor_account_id' field.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder clearPredecessorAccountId() {
      predecessor_account_id = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'receiver_account_id' field.
      * @return The value.
      */
    public java.lang.String getReceiverAccountId() {
      return receiver_account_id;
    }


    /**
      * Sets the value of the 'receiver_account_id' field.
      * @param value The value of 'receiver_account_id'.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder setReceiverAccountId(java.lang.String value) {
      validate(fields()[6], value);
      this.receiver_account_id = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'receiver_account_id' field has been set.
      * @return True if the 'receiver_account_id' field has been set, false otherwise.
      */
    public boolean hasReceiverAccountId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'receiver_account_id' field.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder clearReceiverAccountId() {
      receiver_account_id = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'receipt_kind' field.
      * @return The value.
      */
    public java.lang.String getReceiptKind() {
      return receipt_kind;
    }


    /**
      * Sets the value of the 'receipt_kind' field.
      * @param value The value of 'receipt_kind'.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder setReceiptKind(java.lang.String value) {
      validate(fields()[7], value);
      this.receipt_kind = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'receipt_kind' field has been set.
      * @return True if the 'receipt_kind' field has been set, false otherwise.
      */
    public boolean hasReceiptKind() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'receipt_kind' field.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder clearReceiptKind() {
      receipt_kind = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'originated_from_transaction_hash' field.
      * @return The value.
      */
    public java.lang.String getOriginatedFromTransactionHash() {
      return originated_from_transaction_hash;
    }


    /**
      * Sets the value of the 'originated_from_transaction_hash' field.
      * @param value The value of 'originated_from_transaction_hash'.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder setOriginatedFromTransactionHash(java.lang.String value) {
      validate(fields()[8], value);
      this.originated_from_transaction_hash = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'originated_from_transaction_hash' field has been set.
      * @return True if the 'originated_from_transaction_hash' field has been set, false otherwise.
      */
    public boolean hasOriginatedFromTransactionHash() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'originated_from_transaction_hash' field.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder clearOriginatedFromTransactionHash() {
      originated_from_transaction_hash = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the '__deleted' field.
      * @return The value.
      */
    public java.lang.String getDeleted$1() {
      return __deleted;
    }


    /**
      * Sets the value of the '__deleted' field.
      * @param value The value of '__deleted'.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder setDeleted$1(java.lang.String value) {
      validate(fields()[9], value);
      this.__deleted = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the '__deleted' field has been set.
      * @return True if the '__deleted' field has been set, false otherwise.
      */
    public boolean hasDeleted$1() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the '__deleted' field.
      * @return This builder.
      */
    public abuda.indexer.receipts.Value.Builder clearDeleted$1() {
      __deleted = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Value build() {
      try {
        Value record = new Value();
        record.receipt_id = fieldSetFlags()[0] ? this.receipt_id : (java.lang.String) defaultValue(fields()[0]);
        record.included_in_block_hash = fieldSetFlags()[1] ? this.included_in_block_hash : (java.lang.String) defaultValue(fields()[1]);
        record.included_in_chunk_hash = fieldSetFlags()[2] ? this.included_in_chunk_hash : (java.lang.String) defaultValue(fields()[2]);
        record.index_in_chunk = fieldSetFlags()[3] ? this.index_in_chunk : (java.lang.Integer) defaultValue(fields()[3]);
        record.included_in_block_timestamp = fieldSetFlags()[4] ? this.included_in_block_timestamp : (java.math.BigDecimal) defaultValue(fields()[4]);
        record.predecessor_account_id = fieldSetFlags()[5] ? this.predecessor_account_id : (java.lang.String) defaultValue(fields()[5]);
        record.receiver_account_id = fieldSetFlags()[6] ? this.receiver_account_id : (java.lang.String) defaultValue(fields()[6]);
        record.receipt_kind = fieldSetFlags()[7] ? this.receipt_kind : (java.lang.String) defaultValue(fields()[7]);
        record.originated_from_transaction_hash = fieldSetFlags()[8] ? this.originated_from_transaction_hash : (java.lang.String) defaultValue(fields()[8]);
        record.__deleted = fieldSetFlags()[9] ? this.__deleted : (java.lang.String) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Value>
    WRITER$ = (org.apache.avro.io.DatumWriter<Value>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Value>
    READER$ = (org.apache.avro.io.DatumReader<Value>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










